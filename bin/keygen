#!/usr/bin/env bash
set -e

echo -e "[ node-module:keygen ]"

repo_slug=$(git remote show origin -n \
         | grep -Eio '\w+/(\w+|\w+\-\w+)' \
         | head -n1)
git_email=$(git config user.email)
repo_mail=${git_email/@/+$npm_package_name@}

echo -e "› package_name $npm_package_name"
echo -e "› repo_slug $repo_slug"
echo -e "› repo_mail $repo_mail"
echo -e

mkdir -p .ssh

(cd .ssh && ssh-keygen -t rsa -C $repo_mail -b 4096 -f travis_rsa -N '')
(cd .ssh && travis encrypt-file travis_rsa --add)

echo -e "› your new public key has been saved to your clipboard"
echo -e "› please open github and create a new deployment key"
echo -e
echo -e "= https://github.com/$repo_slug/settings/keys"

# mv travis_rsa.enc .ssh/travis_rsa.enc

# git_user=$(git config user.name)
# git_mail=$(git config user.email)

#
# key_name=${npm_package_name/-/_}_rsa
#
# echo $git_user
# echo $git_slug

# encrypting stuff with travis













#
#
# https://github.com/ivoputzer/kata-js/settings/keys
#
# echo -e "please open https:/github"
# pbcopy < ~/.ssh/id_rsa.pub
#


# eval "$(ssh-agent -s)"
# ssh-add ~/.ssh/id_rsa

# ssh-keygen -y -t rsa -C "$git_email" -f ".ssh/${KEY_NAME"

# $ travis encrypt-file super_secret.txt
#
# encrypting super_secret.txt for rkh/travis-encrypt-file-example
# storing result as super_secret.txt.enc
# storing secure env variables for decryption
#
#
#
# encrypting super_secret.txt for rkh/travis-encrypt-file-example
# storing result as super_secret.txt.enc
# storing secure env variables for decryption
#
# Make sure to add super_secret.txt.enc to the git repository.
# Make sure not to add super_secret.txt to the git repository.
# Commit all changes to your .travis.yml.
#
#
# travis sshkey --generate -r myorg/main
